{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Downloads\\\\Medicare_Project\\\\medicare-admin\\\\src\\\\components\\\\PatientList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getPatients } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PatientList({\n  token\n}) {\n  _s();\n  const [patients, setPatients] = useState([]);\n  useEffect(() => {\n    getPatients(token).then(res => setPatients(res.data));\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: patients.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: p.user.username\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientList, \"2mHPNi2MF+s8ms7PrTd3nXwgmV8=\");\n_c = PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useEffect","useState","getPatients","jsxDEV","_jsxDEV","PatientList","token","_s","patients","setPatients","then","res","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","p","user","username","id","_c","$RefreshReg$"],"sources":["C:/Users/franc/Downloads/Medicare_Project/medicare-admin/src/components/PatientList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getPatients } from \"../services/api\";\r\n\r\nexport default function PatientList({ token }) {\r\n  const [patients, setPatients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPatients(token).then((res) => setPatients(res.data));\r\n  }, [token]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Patients</h3>\r\n      <ul>\r\n        {patients.map((p) => (\r\n          <li key={p.id}>{p.user.username}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,WAAWA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdE,WAAW,CAACI,KAAK,CAAC,CAACI,IAAI,CAAEC,GAAG,IAAKF,WAAW,CAACE,GAAG,CAACC,IAAI,CAAC,CAAC;EACzD,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBb,OAAA;MAAAS,QAAA,EACGL,QAAQ,CAACU,GAAG,CAAEC,CAAC,iBACdf,OAAA;QAAAS,QAAA,EAAgBM,CAAC,CAACC,IAAI,CAACC;MAAQ,GAAtBF,CAAC,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACV,EAAA,CAjBuBF,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}